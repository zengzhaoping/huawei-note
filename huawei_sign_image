#!/bin/bash
CHIPSET=$1
PRODUCT_NAME=$2
if [ "$CHIPSET" = "" ] || [ "$PRODUCT_NAME" = "" ]; then
    echo "Pls input sign platform and product name eg (8917, 8940), (kobe, bach)"
    exit
fi
export ONLINE_SERVER=rnd-signserver.huawei.com
export SECTOOL_DIR=huawei_sectools
BUILD_ROOT_DIR=`pwd`
SECIMAGE_XML=$SECTOOL_DIR/config/$CHIPSET/"$CHIPSET"_secimage.xml

if [ "$PRODUCT_NAME" = "kobe" ]; then
    SIGNED_OUT=./kobe/MSM"$CHIPSET".LA.2.0/common/build/image_signed
    MCFG_DIR=./kobe/MPSS.JO.2.0/modem_proc/mcfg/configs
elif [ "$PRODUCT_NAME" = "aggassiz" ]; then
    SIGNED_OUT=./aggassiz/MSM"$CHIPSET".LA.2.0/common/build/image_signed
    MCFG_DIR=./aggassiz/MPSS.JO.2.0/modem_proc/mcfg/configs/mcfg_sw/generic/OEM
elif [ "$PRODUCT_NAME" = "chopin" ]; then
    SIGNED_OUT=./chopin/MSM"$CHIPSET".LA.2.0/common/build/image_signed
elif [ "$PRODUCT_NAME" = "bach" ]; then
    SIGNED_OUT=./bach/MSM"$CHIPSET".LA.2.0/common/build/image_signed
    MCFG_DIR=./bach/MPSS.TA.2.3/modem_proc/mcfg/configs/mcfg_sw/generic/OEM
fi

if [ "$CHIPSET" = "8953" ]; then
    export model_id=0x0021
    export msm_part=0x000460E1
elif [ "$CHIPSET" = "8917" ]; then
    export model_id=0x003A
    export msm_part=0x000560E1
elif [ "$CHIPSET" = "8940" ]; then
    export model_id=0x0062
    export msm_part=0x0006B0E1
elif [ "$CHIPSET" = "8937" ]; then
    export model_id=0x0041
    export msm_part=0x0006B0E1
fi

config_sign() {
    echo "Configure for sign"
    if [ "$model_id" != "" ] && [ "$msm_part" != "" ]; then
        sed -i "s/<model_id>.*/<model_id>${model_id}<\/model_id>/g"  $SECIMAGE_XML
        sed -i "s/<msm_part>.*/<msm_part>${msm_part}<\/msm_part>/g"  $SECIMAGE_XML
    else
        echo "******************************************************************"
        echo "Pls make model_id= complete in line 2, model_id=0x0021, msm_part=0x000460E1 for 8953!"
        echo "Pls make model_id= complete in line 2, model_id=0x003A, msm_part=0x000560E1 for 8917!"
        echo "Pls make model_id= complete in line 2, model_id=0x0041, msm_part=0x0006B0E1 for 8937!"
        echo "Pls make model_id= complete in line 2, model_id=0x0062, msm_part=0x0006B0E1 for 8940!"
        echo "******************************************************************"
        exit 1
    fi
    if [ -z "$ONLINE_SERVER" ]; then
        echo "******************************************************************"
        echo "Please setup ONLINE_SERVER."
        echo "******************************************************************"
        exit 1
    fi
}

sign_fun() {
    cd "$BUILD_ROOT_DIR"
    python $SECTOOL_DIR/sectools.py secimage -i $2/$1.mbn -c $SECIMAGE_XML -o $SIGNED_OUT -sa
    if [ -f $2/$1_original.mbn ]; then
        echo "the original image is already exist"
    else
        mv $2/$1.mbn $2/$1_original.mbn
    fi
    cp -f $3/$1.mbn $2/$1.mbn
}

sign_configs() {
   cd "$BUILD_ROOT_DIR"
   echo "----------------- begin sign configs mcfg_sw.mbn/mcfg_hw.mbn ---------------------"
   find $MCFG_DIR -type f -name "mcfg_sw.mbn" | awk -F "mcfg_sw.mbn" '{print substr($1, 1, length($1)-1)}'| while read f1
        do
            echo $f1
            sign_fun mcfg_sw $f1 $SIGNED_OUT/$CHIPSET/mcfg_sw
            rm -rf $f1/mcfg_sw_original.mbn
        done
   find $MCFG_DIR -type f -name "mcfg_hw.mbn" | awk -F "mcfg_hw.mbn" '{print substr($1, 1, length($1)-1)}'| while read f1
        do
            echo $f1
            sign_fun mcfg_hw $f1 $SIGNED_OUT/$CHIPSET/mcfg_hw
            rm -rf $f1/mcfg_hw_original.mbn
        done
   echo "------------------ end sign configs mcfg_sw.mbn/mcfg_hw.mbn -----------------------"
}

sign_non_hlos() {
    echo "------ begin sign non_holos -----------"
    if [ "$PRODUCT_NAME" = "kobe" ]; then
        image_list=( "adsp          ./kobe/ADSP.8953.2.8.2/adsp_proc/obj/8937/signed  $SIGNED_OUT/$CHIPSET/adsp"                               #in NON-HLOS.bin
                     "cpe_9335      ./kobe/CPE.TSF.1.0/cpe_proc/build/ms/bin/AAAAAAAA $SIGNED_OUT/$CHIPSET/cpe_9335"                           #in NON-HLOS.bin
                     "fingerprint   ./kobe/TZ.BF.4.0.5/trustzone_images/build/ms/bin/ZALAANAA  $SIGNED_OUT/$CHIPSET/fingerprint"               #in NON-HLOS.bin
                     "fingerprint64 ./kobe/TZ.BF.4.0.5/trustzone_images/build/ms/bin/ZALAANAA  $SIGNED_OUT/$CHIPSET/fingerprint64"             #in NON-HLOS.bin
                     "mba           ./kobe/MPSS.JO.2.0/modem_proc/build/ms/bin/8937.genns.prod $SIGNED_OUT/$CHIPSET/mba"                       #in NON-HLOS.bin
                     "qdsp6sw       ./kobe/MPSS.JO.2.0/modem_proc/build/ms/bin/8937.genns.prod $SIGNED_OUT/$CHIPSET/modem"                     #in NON-HLOS.bin
                     "cmnlib        ./kobe/TZ.BF.4.0.5/trustzone_images/build/ms/bin/ZALAANAA  $SIGNED_OUT/$CHIPSET/cmnlib"                    #in NON-HLOS.bin
                     "cmnlib64      ./kobe/TZ.BF.4.0.5/trustzone_images/build/ms/bin/ZALAANAA  $SIGNED_OUT/$CHIPSET/cmnlib64"                  #in NON-HLOS.bin
                     "cppf          ./kobe/TZ.BF.4.0.5/trustzone_images/build/ms/bin/ZALAANAA  $SIGNED_OUT/$CHIPSET/cppf"                      #in NON-HLOS.bin
                     "dhsecapp      ./kobe/TZ.BF.4.0.5/trustzone_images/build/ms/bin/ZALAANAA  $SIGNED_OUT/$CHIPSET/dhsecapp"                  #in NON-HLOS.bin
                     "qmpsecap      ./kobe/TZ.BF.4.0.5/trustzone_images/build/ms/bin/ZALAANAA  $SIGNED_OUT/$CHIPSET/qmpsecap"                  #in NON-HLOS.bin
                     "isdbtmm       ./kobe/TZ.BF.4.0.5/trustzone_images/build/ms/bin/ZALAANAA  $SIGNED_OUT/$CHIPSET/isdbtmm"                   #in NON-HLOS.bin
                     "gptest        ./kobe/TZ.BF.4.0.5/trustzone_images/build/ms/bin/ZALAANAA  $SIGNED_OUT/$CHIPSET/gptest"                    #in NON-HLOS.bin
                     "securemm      ./kobe/TZ.BF.4.0.5/trustzone_images/build/ms/bin/ZALAANAA  $SIGNED_OUT/$CHIPSET/securemm"                  #in NON-HLOS.bin
                     "venus         ./kobe/VIDEO.VE_ULT.3.1/venus_proc/build/bsp/asic/build/PROD/mbn/reloc/signed  $SIGNED_OUT/$CHIPSET/venus" #in NON-HLOS.bin
                     "smplap32      ./kobe/TZ.BF.4.0.5/trustzone_images/build/ms/bin/ZALAANAA  $SIGNED_OUT/$CHIPSET/smplap32"                  #in NON-HLOS.bin
                     "smplap64      ./kobe/TZ.BF.4.0.5/trustzone_images/build/ms/bin/ZALAANAA  $SIGNED_OUT/$CHIPSET/smplap64"                  #in NON-HLOS.bin
                     "wcnss         ./kobe/CNSS.PR.4.0/wcnss_proc/build/ms/bin/8937/reloc  	  $SIGNED_OUT/$CHIPSET/wcnss"                  #in NON-HLOS.bin
                     "widevine      ./kobe/TZ.BF.4.0.5/trustzone_images/build/ms/bin/ZALAANAA  $SIGNED_OUT/$CHIPSET/widevine")                 #in NON-HLOS.bin
    elif [ "$PRODUCT_NAME" = "aggassiz" ]; then
        image_list=( "adsp          ./aggassiz/ADSP.8953.2.8.2/adsp_proc/obj/8937/signed  $SIGNED_OUT/$CHIPSET/adsp"                               #in NON-HLOS.bin
                     "cpe_9335      ./aggassiz/CPE.TSF.1.0/cpe_proc/build/ms/bin/AAAAAAAA $SIGNED_OUT/$CHIPSET/cpe_9335"                           #in NON-HLOS.bin
                     #"fingerprint   ./aggassiz/TZ.BF.4.0.5/trustzone_images/build/ms/bin/ZALAANAA  $SIGNED_OUT/$CHIPSET/fingerprint"               #in NON-HLOS.bin
                     #"fingerprint64 ./aggassiz/TZ.BF.4.0.5/trustzone_images/build/ms/bin/ZALAANAA  $SIGNED_OUT/$CHIPSET/fingerprint64"             #in NON-HLOS.bin
                     "mba           ./aggassiz/MPSS.JO.2.0/modem_proc/build/ms/bin/8937.genns.prod $SIGNED_OUT/$CHIPSET/mba"                       #in NON-HLOS.bin
                     "qdsp6sw       ./aggassiz/MPSS.JO.2.0/modem_proc/build/ms/bin/8937.genns.prod $SIGNED_OUT/$CHIPSET/modem"                     #in NON-HLOS.bin
                     "cmnlib        ./aggassiz/TZ.BF.4.0.5/trustzone_images/build/ms/bin/ZALAANAA  $SIGNED_OUT/$CHIPSET/cmnlib"                    #in NON-HLOS.bin
                     "cmnlib64      ./aggassiz/TZ.BF.4.0.5/trustzone_images/build/ms/bin/ZALAANAA  $SIGNED_OUT/$CHIPSET/cmnlib64"                  #in NON-HLOS.bin
                     "cppf      	./aggassiz/TZ.BF.4.0.5/trustzone_images/build/ms/bin/ZALAANAA  $SIGNED_OUT/$CHIPSET/cppf"                      #in NON-HLOS.bin
                     "dhsecapp      ./aggassiz/TZ.BF.4.0.5/trustzone_images/build/ms/bin/ZALAANAA  $SIGNED_OUT/$CHIPSET/dhsecapp"                  #in NON-HLOS.bin
                     "qmpsecap      ./aggassiz/TZ.BF.4.0.5/trustzone_images/build/ms/bin/ZALAANAA  $SIGNED_OUT/$CHIPSET/qmpsecap"                  #in NON-HLOS.bin
                     "isdbtmm       ./aggassiz/TZ.BF.4.0.5/trustzone_images/build/ms/bin/ZALAANAA  $SIGNED_OUT/$CHIPSET/isdbtmm"                   #in NON-HLOS.bin
                     "gptest        ./aggassiz/TZ.BF.4.0.5/trustzone_images/build/ms/bin/ZALAANAA  $SIGNED_OUT/$CHIPSET/gptest"                    #in NON-HLOS.bin
                     "securemm      ./aggassiz/TZ.BF.4.0.5/trustzone_images/build/ms/bin/ZALAANAA  $SIGNED_OUT/$CHIPSET/securemm"                  #in NON-HLOS.bin
                     "venus         ./aggassiz/VIDEO.VE_ULT.3.1/venus_proc/build/bsp/asic/build/PROD/mbn/reloc/signed  $SIGNED_OUT/$CHIPSET/venus" #in NON-HLOS.bin
                     "smplap32      ./aggassiz/TZ.BF.4.0.5/trustzone_images/build/ms/bin/ZALAANAA  $SIGNED_OUT/$CHIPSET/smplap32"                  #in NON-HLOS.bin
                     "smplap64      ./aggassiz/TZ.BF.4.0.5/trustzone_images/build/ms/bin/ZALAANAA  $SIGNED_OUT/$CHIPSET/smplap64"                  #in NON-HLOS.bin
                     "wcnss         ./aggassiz/CNSS.PR.4.0/wcnss_proc/build/ms/bin/8937/reloc  	  $SIGNED_OUT/$CHIPSET/wcnss"                  #in NON-HLOS.bin
                     "widevine      ./aggassiz/TZ.BF.4.0.5/trustzone_images/build/ms/bin/ZALAANAA  $SIGNED_OUT/$CHIPSET/widevine")                 #in NON-HLOS.bin)
    elif [ "$PRODUCT_NAME" = "chopin" ]; then
        image_list=()
    elif [ "$PRODUCT_NAME" = "bach" ]; then
        image_list=( "adsp          ./bach/ADSP.8953.2.8.2/adsp_proc/obj/8937/signed  $SIGNED_OUT/$CHIPSET/adsp"                               #in NON-HLOS.bin
                     "cpe_9335      ./bach/CPE.TSF.1.0/cpe_proc/build/ms/bin/AAAAAAAA $SIGNED_OUT/$CHIPSET/cpe_9335"                           #in NON-HLOS.bin
                     #"fingerprint   ./bach/TZ.BF.4.0.5/trustzone_images/build/ms/bin/ZALAANAA  $SIGNED_OUT/$CHIPSET/fingerprint"               #in NON-HLOS.bin
                     #"fingerprint64 ./bach/TZ.BF.4.0.5/trustzone_images/build/ms/bin/ZALAANAA  $SIGNED_OUT/$CHIPSET/fingerprint64"             #in NON-HLOS.bin
                     #"fpsilead      ./bach/TZ.BF.4.0.5/trustzone_images/build/ms/bin/$TZ_BUILD $SIGNED_OUT/$CHIPSET/fpsilead"     #in NON-HLOS.bin
					 "mba           ./bach/MPSS.TA.2.3/modem_proc/build/ms/bin/8940.gen.prod $SIGNED_OUT/$CHIPSET/mba"                       #in NON-HLOS.bin
                     "qdsp6sw       ./bach/MPSS.TA.2.3/modem_proc/build/ms/bin/8940.gen.prod $SIGNED_OUT/$CHIPSET/modem"                     #in NON-HLOS.bin
                     "cmnlib          ./bach/TZ.BF.4.0.5/trustzone_images/build/ms/bin/ZALAANAA  $SIGNED_OUT/$CHIPSET/cmnlib"                    #in NON-HLOS.bin
                     "cmnlib64        ./bach/TZ.BF.4.0.5/trustzone_images/build/ms/bin/ZALAANAA  $SIGNED_OUT/$CHIPSET/cmnlib64"                  #in NON-HLOS.bin
                     "cppf      ./bach/TZ.BF.4.0.5/trustzone_images/build/ms/bin/ZALAANAA  $SIGNED_OUT/$CHIPSET/cppf"                      #in NON-HLOS.bin
                     "dhsecapp          ./bach/TZ.BF.4.0.5/trustzone_images/build/ms/bin/ZALAANAA  $SIGNED_OUT/$CHIPSET/dhsecapp"                  #in NON-HLOS.bin
                     "qmpsecap      ./bach/TZ.BF.4.0.5/trustzone_images/build/ms/bin/ZALAANAA  $SIGNED_OUT/$CHIPSET/qmpsecap"                  #in NON-HLOS.bin
                     "isdbtmm      ./bach/TZ.BF.4.0.5/trustzone_images/build/ms/bin/ZALAANAA  $SIGNED_OUT/$CHIPSET/isdbtmm"                   #in NON-HLOS.bin
                     "gptest       ./bach/TZ.BF.4.0.5/trustzone_images/build/ms/bin/ZALAANAA  $SIGNED_OUT/$CHIPSET/gptest"                    #in NON-HLOS.bin
                     "securemm        ./bach/TZ.BF.4.0.5/trustzone_images/build/ms/bin/ZALAANAA  $SIGNED_OUT/$CHIPSET/securemm"                  #in NON-HLOS.bin
                     "venus         ./bach/VIDEO.VE_ULT.3.1/venus_proc/build/bsp/asic/build/PROD/mbn/reloc/signed  $SIGNED_OUT/$CHIPSET/venus" #in NON-HLOS.bin
                     "smplap32      ./bach/TZ.BF.4.0.5/trustzone_images/build/ms/bin/ZALAANAA  $SIGNED_OUT/$CHIPSET/smplap32"                  #in NON-HLOS.bin
                     "smplap64      ./bach/TZ.BF.4.0.5/trustzone_images/build/ms/bin/ZALAANAA  $SIGNED_OUT/$CHIPSET/smplap64"                  #in NON-HLOS.bin
                     "wcnss         ./bach/CNSS.PR.4.0/wcnss_proc/build/ms/bin/8940/reloc  	  $SIGNED_OUT/$CHIPSET/wcnss"                  #in NON-HLOS.bin
                     "widevine      ./bach/TZ.BF.4.0.5/trustzone_images/build/ms/bin/ZALAANAA  $SIGNED_OUT/$CHIPSET/widevine")                 #in NON-HLOS.bin)
    fi
    n_list=${#image_list[*]}     #we can get the image path from contents.xml
    echo n_list is $n_list
    for ((i=0;i<$n_list;i++));
    do
        image_name=(${image_list[$i]})
        sign_fun ${image_name[0]} ${image_name[1]} ${image_name[2]}
        #rm ${image_name[1]}/${image_name[0]}_original.mbn
    done
    echo "------end sign non_holos -----------"
}

sign_upgrade() {
    echo "------ begin sign -----------"
    if [ "$PRODUCT_NAME" = "kobe" ]; then
        image_list=("devcfg         ./kobe/upgrade                  $SIGNED_OUT/$CHIPSET/devcfg"
                    "tz             ./kobe/upgrade                  $SIGNED_OUT/$CHIPSET/qsee"				
                    "sbl1           ./kobe/upgrade                  $SIGNED_OUT/$CHIPSET/sbl1"
                    "rpm            ./kobe/upgrade                  $SIGNED_OUT/$CHIPSET/rpm" 
                    "cmnlib         ./kobe/upgrade                  $SIGNED_OUT/$CHIPSET/cmnlib"
                    "cmnlib64       ./kobe/upgrade                  $SIGNED_OUT/$CHIPSET/cmnlib64"
                    "lksecapp       ./kobe/upgrade                  $SIGNED_OUT/$CHIPSET/lksecapp"
                    "keymaster      ./kobe/upgrade                  $SIGNED_OUT/$CHIPSET/keymaster"
                    "emmc_appsboot  ./kobe/upgrade                  $SIGNED_OUT/$CHIPSET/appsbl"
                    "prog_emmc_firehose_8917_ddr    ./kobe/upgrade  $SIGNED_OUT/$CHIPSET/prog_emmc_firehose_ddr")
    elif [ "$PRODUCT_NAME" = "aggassiz" ]; then
        image_list=("devcfg         ./aggassiz/upgrade                  $SIGNED_OUT/$CHIPSET/devcfg"
                    "tz             ./aggassiz/upgrade                  $SIGNED_OUT/$CHIPSET/qsee"				
                    "sbl1           ./aggassiz/upgrade                  $SIGNED_OUT/$CHIPSET/sbl1"
                    "rpm            ./aggassiz/upgrade                  $SIGNED_OUT/$CHIPSET/rpm" 
                    "cmnlib         ./aggassiz/upgrade                  $SIGNED_OUT/$CHIPSET/cmnlib"
                    "cmnlib64       ./aggassiz/upgrade                  $SIGNED_OUT/$CHIPSET/cmnlib64"
                    "lksecapp       ./aggassiz/upgrade                  $SIGNED_OUT/$CHIPSET/lksecapp"
                    "keymaster      ./aggassiz/upgrade                  $SIGNED_OUT/$CHIPSET/keymaster"
                    "emmc_appsboot  ./aggassiz/upgrade                  $SIGNED_OUT/$CHIPSET/appsbl"
                    "prog_emmc_firehose_8917_ddr    ./aggassiz/upgrade  $SIGNED_OUT/$CHIPSET/prog_emmc_firehose_ddr")
    elif [ "$PRODUCT_NAME" = "chopin" ]; then
        image_list=()
    elif [ "$PRODUCT_NAME" = "bach" ]; then
        image_list=("devcfg         ./bach/upgrade                  $SIGNED_OUT/$CHIPSET/devcfg"
                    "tz             ./bach/upgrade                  $SIGNED_OUT/$CHIPSET/qsee"				
                    "sbl1           ./bach/upgrade                  $SIGNED_OUT/$CHIPSET/sbl1"
                    "rpm            ./bach/upgrade                  $SIGNED_OUT/$CHIPSET/rpm" 
                    "cmnlib         ./bach/upgrade                  $SIGNED_OUT/$CHIPSET/cmnlib"
                    "cmnlib64       ./bach/upgrade                  $SIGNED_OUT/$CHIPSET/cmnlib64"
                    "lksecapp       ./bach/upgrade                  $SIGNED_OUT/$CHIPSET/lksecapp"
                    "keymaster      ./bach/upgrade                  $SIGNED_OUT/$CHIPSET/keymaster"
                    "emmc_appsboot  ./bach/upgrade                  $SIGNED_OUT/$CHIPSET/appsbl"
                    "prog_emmc_firehose_8937_ddr    ./bach/upgrade  $SIGNED_OUT/$CHIPSET/prog_emmc_firehose_ddr")
    fi
    n_list=${#image_list[*]}     #we can get the image path from contents.xml
    echo n_list is $n_list
    for ((i=0;i<$n_list;i++));
    do
        image_name=(${image_list[$i]})
        sign_fun ${image_name[0]} ${image_name[1]} ${image_name[2]}
        rm ${image_name[1]}/${image_name[0]}_original.mbn
    done
    echo "-------- end sign -----------"
}

sign_images(){
    sign_configs
    sign_non_hlos
    sign_upgrade
}

#----must call first, in order to config sign-----------
config_sign

sign_images

